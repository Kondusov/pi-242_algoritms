Вопросы для экзамена по предмету "Основы алгоритмизации и программирования "

Экзамен будет приниматься в письменной и устной форме, в билете будет поставлена задача
в форме технического задания - на написание программы (функции), c использованием указанного
в задании алгоритма (на любом языке программирования),
в программе должен быть использован алгоритм УКАЗАННЫЙ В ВАШЕМ БИЛЕТЕ.
Так же в билете будет 2 теоретических вопроса (отправляете краткий или развернутый ответ в письменном виде).
Время отведенное на выполнение всех заданий из билета - 30 минут.
После передачи файлов программы на проверку (загружаете zip архив в журнал, в специально созданное ДЗ),
студент должен устно ответить на 2 вопроса преподавателя (из билета), а так же дополнительные вопросы
касающиеся его письменной работы.
Экзамен будет считаться сданным в случае выполнения студентом, не менее 99% письменного задания,
и не менее двух верных ответов в устной форме по вопросам из билета.

На экзамене запрещается:
-пользоваться смартфоном и мобильным телефоном (не зависимо от цели использования)
-смотреть в мониторы других студентов
-обсуждать способы выполнения задания
-пользоваться поиском в сети интернет
(в случае нарушения этих правил - работа студента не принимается к проверке и выставляется оценка -"1").

Условия допуска к экзамену:
- сданы все домашние задания
- сданы все контрольные и самостоятельные работы
- студент пришел вовремя (не позднее начала экзамена)
--------------------------------------------------------------------------------------------------------
Список вопросов:

Что такое алгоритм
Как оценить сложность алгоритма
Бинарный поиск
Что такое быстрая сортировка
Массивы
Ассоциативные массивы
Многомерные массивы
Сортировка массива
В чем разница между push и pop
Другие методы для работы с массивами
Разница между массивом и стеком
Циклы (for, while, do while и т.д.)
Конструкции с условием (if else)

Разница между линейной структурой данных и иерархической структурой данных
Рекурсия
Поиск в ширину

Алгоритм Дейкстра.
Жадные алгоритмы.
Алгоритм K ближайших соседей.
Бинарное дерево.
Динамическое программирование.
Хеш таблицы.
"О"-большое.
Структуры данных - стек и очередь.
Сравните алгоритм поиска в ширину и алгоритм Дейкстры.
Структура данных - граф.
Связанные списки, двусвязные списки.
Структура данных - множество.
Приближенные алгоритмы.


Примеры заданий на экзамене:
===========================

Задача 1: Реализуйте пузырьковую сортировку (Сортировка простыми обменами) для массива целых чисел. 
Например, для массива [7,5,4,2,3,1,8,6] результат должен быть [1,2,3,4,5,6,7,8].

Задача 2: Напишите функцию, которая выполняет бинарный поиск в массиве положительных чисел.
Функция возвращает индекс искомого элемента, в случае если не находит - возвращает -1.

Задача 3: Напишите рекурсивную функцию, которая вычисляет n-й член последовательности Фибоначчи,
используя подход динамического программирования (пример с мемоизацией).
Например, для n = 5 результат должен быть 5.

Задача 4: Напишите функцию, которая реализует структуру данных - стек.
(для примера добавьте в стек несколько элементов, и удалите один)
Напишите функцию, которая реализует структуру данных - очередь.
(для примера добавьте в очередь несколько элементов, и удалите один)

Задача 5: Реализуйте сортировку выбором для массива строк. Например,
для входного массива ["banana", "apple", "kiwi"] результат должен быть ["kiwi", "apple", "banana"].
(отсортировали по колличеству символов)

Задача 6: Реализуйте сортировку выбором для массива строк. Например,
для входного массива ["banana", "apple", "kiwi"] результат должен быть ["apple", "banana", "kiwi"].
(отсортировали по алфавиту)

Задача 7: Реализуйте рекурсивную функцию для вычисления суммы всех элементов массива.
Например, для массива [1, 2, 3] результат должен быть 6.

Задача 8: Реализуйте жадный алгоритм для решения задачи о рюкзаке
(она же задача размена монетами, купюры).

Задача 9: Напишите функцию (хеш-функцию) для хеш таблицы, которая проверяет данные при добавлении в таблицу,
и исключает коллизии.

Задача 10: Напишите функцию, которая проверяет сбалансированна строка или нет,
Например, строки "текст в (скобках)","текст в" должны вернуть true, а строки "текст в (скобках",
 "текст вне ) скобок" — false.